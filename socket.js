// Mai APP file !!! 
var express = require('express');

var util = require('util');
var _ = require('underscore');
var fs     = require('fs');

var app = express()
  , http = require('http')
  , server = http.createServer(app)
  , io = require('socket.io').listen(server);


server.listen(5000);


// We define the key of the cookie containing the Express SID
var EXPRESS_SID_KEY = 'express.sid';

// We define a secret string used to crypt the cookies sent by Express
var COOKIE_SECRET = 'mysecretjaja';
//var cookieParser = express.cookieParser(COOKIE_SECRET);

// Create a new store in memory for the Express sessions
var sessionStore = new express.session.MemoryStore();

app.configure(function() {
    app.use(express.static(__dirname + '/web'));
    
    app.use(express.cookieParser(COOKIE_SECRET));
		
		app.use(express.session({
	        store: sessionStore,
	        cookie: { 
	            httpOnly: true
	        },
	        key: EXPRESS_SID_KEY
	    }));

    //app.use(express.session({secret: 'secret', key: 'express.sid'}));
});


 app.get('/', function(req, res)
 {
      	res.sendfile("web/main.html");      	
 });


 app.get('/api/bets', function(req, res)
 {
      	res.send(betData);      	
 });



var desk = [];
for(var a = 0; a< 1001; a++ )
{
		desk.push(null);	
}

var coefs = [ 2.0,0.0,0.0,0.0,1.2,1.2,0.0,0.0,0.0,1.8,2.0,1.8,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4,1.3,0.0,0.0,1.3,0.0,0.0,0.0,2.5,1.4,2.0,0.0,1.5,2.0,2.5,2.5,1.6,0.0,2.0,0.0,0.0,0.0,1.8,0.0,0.0,0.0,2.0,0.0,0.0,2.5,1.3,1.2,0.0,0.0,1.2,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2,0.0,1.5,1.5,1.5,0.0,0.0,5.0,0.0,1.8,5.0,1.3,0.0,0.0,1.1,0.0,2.5,0.0,0.0,0.0,0.0,1.3,0.0,1.5,1.6,0.0,1.4,0.0,1.4,1.4,0.0,2.5,1.1,1.6,2.5,1.2,2.5,1.2,2.0,2.0,0.0,1.3,5.0,0.0,1.5,1.5,2.0,2.0,0.0,1.3,0.0,0.0,0.0,0.0,0.0,2.0,0.0,3.0,0.0,0.0,1.5,2.5,1.2,2.5,3.0,1.5,1.3,0.0,3.0,0.0,1.3,5.0,1.4,0.0,1.5,0.0,2.0,0.0,1.2,0.0,2.5,2.5,1.4,0.0,5.0,0.0,5.0,0.0,1.4,1.3,1.6,0.0,0.0,1.1,2.5,0.0,1.4,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,1.3,1.3,1.4,10.0,0.0,1.5,1.2,5.0,0.0,0.0,0.0,5.0,0.0,1.6,2.0,0.0,1.8,0.0,0.0,1.2,1.3,0.0,1.5,1.3,0.0,0.0,1.2,0.0,2.0,2.0,0.0,2.0,0.0,0.0,1.5,0.0,2.0,2.0,0.0,0.0,0.0,1.2,2.5,1.3,0.0,1.3,2.0,1.4,2.5,0.0,2.5,0.0,0.0,1.2,1.3,2.0,1.3,0.0,0.0,0.0,1.3,0.0,0.0,3.0,0.0,0.0,0.0,1.3,0.0,1.5,1.8,1.4,2.5,0.0,1.5,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,2.5,1.3,0.0,3.0,3.0,1.1,2.0,0.0,2.0,0.0,0.0,2.0,2.0,1.5,0.0,0.0,0.0,0.0,0.0,1.3,1.5,0.0,0.0,1.4,1.4,1.5,0.0,0.0,2.5,0.0,0.0,0.0,1.6,0.0,2.0,0.0,0.0,1.4,0.0,0.0,0.0,5.0,0.0,0.0,1.3,0.0,0.0,0.0,2.0,1.5,1.8,1.3,0.0,0.0,0.0,2.5,0.0,0.0,2.5,1.6,1.2,1.3,0.0,2.0,0.0,5.0,1.3,0.0,1.5,1.3,1.5,0.0,1.6,0.0,2.0,1.5,1.3,0.0,3.0,0.0,3.0,2.0,0.0,0.0,0.0,0.0,1.5,0.0,1.4,0.0,0.0,0.0,1.1,1.3,0.0,1.3,0.0,0.0,0.0,0.0,2.0,1.5,2.0,0.0,1.6,0.0,1.3,1.4,0.0,0.0,0.0,1.1,0.0,0.0,5.0,1.5,1.5,0.0,1.4,0.0,2.0,0.0,0.0,0.0,1.2,1.4,0.0,1.5,1.2,0.0,2.0,2.5,1.2,10.0,1.2,1.4,1.4,0.0,0.0,1.3,0.0,1.4,0.0,0.0,0.0,0.0,0.0,1.3,1.5,5.0,1.3,1.2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,1.3,0.0,2.0,0.0,1.3,1.4,5.0,1.2,1.5,1.2,1.6,0.0,5.0,0.0,2.5,0.0,2.0,0.0,1.3,0.0,2.0,1.4,0.0,2.0,0.0,1.5,2.5,0.0,0.0,1.4,0.0,2.0,0.0,0.0,0.0,1.4,1.1,0.0,0.0,1.4,0.0,0.0,0.0,0.0,1.3,0.0,1.2,2.0,0.0,1.5,1.8,0.0,0.0,1.8,0.0,1.5,0.0,0.0,0.0,0.0,1.3,0.0,3.0,1.4,1.3,1.3,0.0,0.0,1.3,1.3,1.6,0.0,0.0,0.0,3.0,0.0,0.0,1.3,1.1,1.3,0.0,1.1,0.0,1.5,0.0,0.0,0.0,2.5,0.0,2.5,0.0,1.2,1.5,3.0,0.0,0.0,1.3,0.0,0.0,1.3,0.0,2.0,0.0,1.2,0.0,0.0,0.0,1.3,0.0,3.0,0.0,1.5,5.0,0.0,1.4,0.0,1.4,0.0,0.0,0.0,0.0,1.5,0.0,3.0,2.5,1.5,1.4,2.0,0.0,0.0,0.0,0.0,0.0,3.0,5.0,0.0,0.0,0.0,0.0,1.4,1.4,0.0,0.0,0.0,1.4,0.0,1.2,0.0,2.5,10.0,0.0,0.0,1.3,1.5,0.0,1.2,1.1,1.3,1.1,1.4,10.0,1.5,1.4,1.3,0.0,3.0,0.0,1.6,0.0,1.2,1.3,2.5,0.0,1.2,1.8,1.8,0.0,1.3,1.2,2.5,1.2,1.2,0.0,3.0,0.0,0.0,0.0,0.0,1.5,0.0,0.0,2.0,0.0,5.0,1.4,1.8,0.0,1.1,1.6,1.4,0.0,1.2,0.0,1.4,1.4,1.3,0.0,0.0,1.2,0.0,5.0,0.0,0.0,0.0,0.0,1.6,1.4,3.0,2.0,0.0,1.6,1.6,1.3,0.0,1.5,2.0,1.2,1.3,0.0,3.0,0.0,2.0,5.0,0.0,0.0,0.0,0.0,0.0,1.3,0.0,1.1,0.0,1.6,0.0,0.0,1.8,0.0,1.6,1.6,0.0,1.2,2.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,2.5,0.0,0.0,2.0,0.0,0.0,1.5,0.0,0.0,2.0,1.5,1.4,1.5,1.2,0.0,0.0,1.5,0.0,0.0,0.0,0.0,1.5,0.0,0.0,5.0,0.0,1.4,1.5,1.6,0.0,0.0,0.0,1.3,1.5,2.0,2.5,1.3,1.1,1.5,0.0,1.4,1.5,0.0,0.0,0.0,1.6,0.0,1.3,0.0,0.0,2.0,1.2,0.0,0.0,1.5,0.0,0.0,0.0,2.5,3.0,0.0,0.0,0.0,1.1,1.3,0.0,0.0,1.3,0.0,0.0,5.0,1.1,5.0,1.3,1.5,0.0,0.0,0.0,0.0,1.2,0.0,1.4,0.0,0.0,0.0,0.0,0.0,1.2,1.5,0.0,0.0,0.0,1.4,2.5,1.4,0.0,0.0,1.3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3,1.4,1.1,0.0,0.0,0.0,2.5,0.0,2.0,2.5,0.0,0.0,0.0,0.0,1.4,0.0,0.0,1.5,1.4,0.0,0.0,2.5,0.0,0.0,1.4,1.3,1.6,1.4,0.0,1.4,0.0,0.0,1.3,1.4,5.0,1.3,2.5,0.0,0.0,0.0,0.0,0.0,2.5,2.0,1.6,1.2,1.3,0.0,1.1,0.0,1.5,0.0,1.5,2.5,1.5,0.0,2.0,5.0,0.0,0.0,0.0,0.0,1.8,0.0,2.5,1.4,3.0,0.0,0.0,0.0,1.8,0.0,1.1,1.3,1.2,0.0,1.5,2.5,0.0,2.5,0.0,0.0,0.0,1.8,0.0,1.2,0.0,5.0,0.0,1.2,2.0,1.6,0.0,2.5,0.0,0.0,2.5,2.5,1.3,0.0,1.3,2.5,1.5,0.0,0.0,1.1,0.0,0.0,0.0,0.0,1.3,1.3,0.0,0.0,1.3,0.0,0.0,1.3,0.0,0.0,0.0,0.0,1.4,0.0,0.0,1.4,0.0,1.2,2.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0,0.0,10.0,1.3,0.0,1.3,2.5,1.2,0.0,0.0,0.0,0.0,0.0,1.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,5.0,1.8,3.0,1.4,2.0,0.0,1.5,5.0,1.5,3.0,0.0,2.5,1.6,0.0,1.2,1.1,0.0,1.2,1.5,1.5,0.0,0.0,1.3,1.2,1.1,0.0,1.8,5.0,2.0,2.0,1.2,0.0,0.0,2.0,0.0,0.0,0.0,0.0,1.5,2.0,3.0,2.0,1.2,0.0,2.5,0.0,1.3,1.5,5.0,0.0,0.0,0.0];
var currentcoefs = _.shuffle(coefs);

var betData = 
[
						{
						    "gameID" : 12558,
						    "desk"   : desk,
						    "bets"	 : currentcoefs						    
						}
];

	

io.sockets.on('connection', function (socket) {

	// console.log('=====================================================');
         
  //   console.log( util.inspect(socket.handshake, false, null) );
  //   var log = fs.createWriteStream('session.txt', {'flags': 'a'}); 
  //   log.end(util.inspect(socket.handshake, false, null) + "\n");

  //   console.log('=====================================================');

	  socket.emit('firstload', betData );

	  socket.on('makebet', function (data) {
		    	
		    	console.log('Bet has been sent !!!', data);
		  		
		    	// 1) Find position in array
	  			var coef = currentcoefs[data.id];
	  			var winnig = coef * data.amt;
	  			desk[data.id] = coef;

	  			// 2) if bet is wined multiply 

	  			// 3) Update Client balance +- 

	  			// 4) return Client Bet Winninng and Current Balance 
	  
	  			// .....  

	  			var betAllMessage = 
						  					{
						  							 betidtemid: 	data.id,
						  							 betcoef : 		coef
						  					};

		  		//socket.emit('betresponse',  { betresponse: 'ok' } ); 
		  		io.sockets.emit('betallmessage', betAllMessage );

		 });

});


betmaker = function()
{
		return null;	
}