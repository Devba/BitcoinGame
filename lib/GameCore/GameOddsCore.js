	// Game/ Bets Core
	var mongoose 	  = require('mongoose');
	var _           = require('underscore');
	var fs          = require('fs');

	//-- Create  Schema 
	var BetsSchema  = mongoose.Schema({		
				Bets 							: 		String,
				OddsStartDate 		: 	  { type: Date, 		default: Date.now },
				isActive      		:     { type: Boolean, 	default: 1 } 
	});


	//-- Create model 
	var BetsModel  = mongoose.model('games', BetsSchema);

	var desk = [];
	for(var a = 0; a< 1001; a++ )
	{
				desk.push(null);	
	}


	//-- Create new Game 
	exports.CreateNewGame = function(db, callback)
	{
			//-- Close Previus Game: (Into Database)
			CloseGame(db, function(err, resp){

						//-- Call: GenerateOddList Function
						var newOdds = GenerateOddsList();

						var bets = new BetsModel({
									Bets: newOdds,
									startdate: null,
									isActive: 1
						});

						//-- Save bets
						bets.save(function(err){								
									var betsSaveErrorCode = 0;
									if(err){ 
												console.log(err);					
												betsSaveErrorCode = -1;
									 }else{					 			
									 			console.log('Data has been saved !!!');					 		
									 } 								
								 	callback(betsSaveErrorCode); //  Sata has been saved !
						});
			}); 
	}

	//-- Close Existing Game 
	CloseGame = function(db, callback)
	{

		BetsModel.findOne({ isActive: 1 }, function (err, doc) {
  			
	  			if (err) {	  						
	  						console.log('Error During Update Game status ...');
	  			}else{

	  					if(doc !== null){

	  							doc.isActive = 0;
	  							doc.save(callback);			  					  	

	  					}else{
	  							console.log('Call back something !!!');
	  							callback(null, 123);
	  					}				  		
	  			}   		  		
			});
	}	
	

	//-- generate new odds list function
	GenerateOddsList = function()
	{
			// To Do use  real coef mixer !!!
			var coefs = [ 2.0,0.0,0.0,0.0,1.2,1.2,0.0,0.0,0.0,1.8,2.0,1.8,0.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.4,1.3,0.0,0.0,1.3,0.0,0.0,0.0,2.5,1.4,2.0,0.0,1.5,2.0,2.5,2.5,1.6,0.0,2.0,0.0,0.0,0.0,1.8,0.0,0.0,0.0,2.0,0.0,0.0,2.5,1.3,1.2,0.0,0.0,1.2,2.0,0.0,2.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.2,0.0,1.5,1.5,1.5,0.0,0.0,5.0,0.0,1.8,5.0,1.3,0.0,0.0,1.1,0.0,2.5,0.0,0.0,0.0,0.0,1.3,0.0,1.5,1.6,0.0,1.4,0.0,1.4,1.4,0.0,2.5,1.1,1.6,2.5,1.2,2.5,1.2,2.0,2.0,0.0,1.3,5.0,0.0,1.5,1.5,2.0,2.0,0.0,1.3,0.0,0.0,0.0,0.0,0.0,2.0,0.0,3.0,0.0,0.0,1.5,2.5,1.2,2.5,3.0,1.5,1.3,0.0,3.0,0.0,1.3,5.0,1.4,0.0,1.5,0.0,2.0,0.0,1.2,0.0,2.5,2.5,1.4,0.0,5.0,0.0,5.0,0.0,1.4,1.3,1.6,0.0,0.0,1.1,2.5,0.0,1.4,2.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,1.3,1.3,1.4,10.0,0.0,1.5,1.2,5.0,0.0,0.0,0.0,5.0,0.0,1.6,2.0,0.0,1.8,0.0,0.0,1.2,1.3,0.0,1.5,1.3,0.0,0.0,1.2,0.0,2.0,2.0,0.0,2.0,0.0,0.0,1.5,0.0,2.0,2.0,0.0,0.0,0.0,1.2,2.5,1.3,0.0,1.3,2.0,1.4,2.5,0.0,2.5,0.0,0.0,1.2,1.3,2.0,1.3,0.0,0.0,0.0,1.3,0.0,0.0,3.0,0.0,0.0,0.0,1.3,0.0,1.5,1.8,1.4,2.5,0.0,1.5,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,0.0,2.5,1.3,0.0,3.0,3.0,1.1,2.0,0.0,2.0,0.0,0.0,2.0,2.0,1.5,0.0,0.0,0.0,0.0,0.0,1.3,1.5,0.0,0.0,1.4,1.4,1.5,0.0,0.0,2.5,0.0,0.0,0.0,1.6,0.0,2.0,0.0,0.0,1.4,0.0,0.0,0.0,5.0,0.0,0.0,1.3,0.0,0.0,0.0,2.0,1.5,1.8,1.3,0.0,0.0,0.0,2.5,0.0,0.0,2.5,1.6,1.2,1.3,0.0,2.0,0.0,5.0,1.3,0.0,1.5,1.3,1.5,0.0,1.6,0.0,2.0,1.5,1.3,0.0,3.0,0.0,3.0,2.0,0.0,0.0,0.0,0.0,1.5,0.0,1.4,0.0,0.0,0.0,1.1,1.3,0.0,1.3,0.0,0.0,0.0,0.0,2.0,1.5,2.0,0.0,1.6,0.0,1.3,1.4,0.0,0.0,0.0,1.1,0.0,0.0,5.0,1.5,1.5,0.0,1.4,0.0,2.0,0.0,0.0,0.0,1.2,1.4,0.0,1.5,1.2,0.0,2.0,2.5,1.2,10.0,1.2,1.4,1.4,0.0,0.0,1.3,0.0,1.4,0.0,0.0,0.0,0.0,0.0,1.3,1.5,5.0,1.3,1.2,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,1.3,0.0,2.0,0.0,1.3,1.4,5.0,1.2,1.5,1.2,1.6,0.0,5.0,0.0,2.5,0.0,2.0,0.0,1.3,0.0,2.0,1.4,0.0,2.0,0.0,1.5,2.5,0.0,0.0,1.4,0.0,2.0,0.0,0.0,0.0,1.4,1.1,0.0,0.0,1.4,0.0,0.0,0.0,0.0,1.3,0.0,1.2,2.0,0.0,1.5,1.8,0.0,0.0,1.8,0.0,1.5,0.0,0.0,0.0,0.0,1.3,0.0,3.0,1.4,1.3,1.3,0.0,0.0,1.3,1.3,1.6,0.0,0.0,0.0,3.0,0.0,0.0,1.3,1.1,1.3,0.0,1.1,0.0,1.5,0.0,0.0,0.0,2.5,0.0,2.5,0.0,1.2,1.5,3.0,0.0,0.0,1.3,0.0,0.0,1.3,0.0,2.0,0.0,1.2,0.0,0.0,0.0,1.3,0.0,3.0,0.0,1.5,5.0,0.0,1.4,0.0,1.4,0.0,0.0,0.0,0.0,1.5,0.0,3.0,2.5,1.5,1.4,2.0,0.0,0.0,0.0,0.0,0.0,3.0,5.0,0.0,0.0,0.0,0.0,1.4,1.4,0.0,0.0,0.0,1.4,0.0,1.2,0.0,2.5,10.0,0.0,0.0,1.3,1.5,0.0,1.2,1.1,1.3,1.1,1.4,10.0,1.5,1.4,1.3,0.0,3.0,0.0,1.6,0.0,1.2,1.3,2.5,0.0,1.2,1.8,1.8,0.0,1.3,1.2,2.5,1.2,1.2,0.0,3.0,0.0,0.0,0.0,0.0,1.5,0.0,0.0,2.0,0.0,5.0,1.4,1.8,0.0,1.1,1.6,1.4,0.0,1.2,0.0,1.4,1.4,1.3,0.0,0.0,1.2,0.0,5.0,0.0,0.0,0.0,0.0,1.6,1.4,3.0,2.0,0.0,1.6,1.6,1.3,0.0,1.5,2.0,1.2,1.3,0.0,3.0,0.0,2.0,5.0,0.0,0.0,0.0,0.0,0.0,1.3,0.0,1.1,0.0,1.6,0.0,0.0,1.8,0.0,1.6,1.6,0.0,1.2,2.0,0.0,0.0,3.0,0.0,0.0,0.0,3.0,2.5,0.0,0.0,2.0,0.0,0.0,1.5,0.0,0.0,2.0,1.5,1.4,1.5,1.2,0.0,0.0,1.5,0.0,0.0,0.0,0.0,1.5,0.0,0.0,5.0,0.0,1.4,1.5,1.6,0.0,0.0,0.0,1.3,1.5,2.0,2.5,1.3,1.1,1.5,0.0,1.4,1.5,0.0,0.0,0.0,1.6,0.0,1.3,0.0,0.0,2.0,1.2,0.0,0.0,1.5,0.0,0.0,0.0,2.5,3.0,0.0,0.0,0.0,1.1,1.3,0.0,0.0,1.3,0.0,0.0,5.0,1.1,5.0,1.3,1.5,0.0,0.0,0.0,0.0,1.2,0.0,1.4,0.0,0.0,0.0,0.0,0.0,1.2,1.5,0.0,0.0,0.0,1.4,2.5,1.4,0.0,0.0,1.3,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.3,1.4,1.1,0.0,0.0,0.0,2.5,0.0,2.0,2.5,0.0,0.0,0.0,0.0,1.4,0.0,0.0,1.5,1.4,0.0,0.0,2.5,0.0,0.0,1.4,1.3,1.6,1.4,0.0,1.4,0.0,0.0,1.3,1.4,5.0,1.3,2.5,0.0,0.0,0.0,0.0,0.0,2.5,2.0,1.6,1.2,1.3,0.0,1.1,0.0,1.5,0.0,1.5,2.5,1.5,0.0,2.0,5.0,0.0,0.0,0.0,0.0,1.8,0.0,2.5,1.4,3.0,0.0,0.0,0.0,1.8,0.0,1.1,1.3,1.2,0.0,1.5,2.5,0.0,2.5,0.0,0.0,0.0,1.8,0.0,1.2,0.0,5.0,0.0,1.2,2.0,1.6,0.0,2.5,0.0,0.0,2.5,2.5,1.3,0.0,1.3,2.5,1.5,0.0,0.0,1.1,0.0,0.0,0.0,0.0,1.3,1.3,0.0,0.0,1.3,0.0,0.0,1.3,0.0,0.0,0.0,0.0,1.4,0.0,0.0,1.4,0.0,1.2,2.0,0.0,0.0,0.0,2.0,0.0,0.0,3.0,0.0,10.0,1.3,0.0,1.3,2.5,1.2,0.0,0.0,0.0,0.0,0.0,1.5,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,2.0,0.0,0.0,0.0,5.0,1.8,3.0,1.4,2.0,0.0,1.5,5.0,1.5,3.0,0.0,2.5,1.6,0.0,1.2,1.1,0.0,1.2,1.5,1.5,0.0,0.0,1.3,1.2,1.1,0.0,1.8,5.0,2.0,2.0,1.2,0.0,0.0,2.0,0.0,0.0,0.0,0.0,1.5,2.0,3.0,2.0,1.2,0.0,2.5,0.0,1.3,1.5,5.0,0.0,0.0,0.0];
			var currentcoefs = _.shuffle(coefs);
			
			return currentcoefs;
	}


	//-- retrive odds from database
	exports.getcurrentOddsList = function(db, callback)
	{
			//-- Get odds From database where isActive = 1;
			var betdata = [];
			BetsModel.findOne({ isActive: 1 }, function (err, doc) {
  			
						if(err){
								console.log(err);
						}else{ 									
								callback(null, doc);
						}
			});
	}

